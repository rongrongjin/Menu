{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Menu\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useState, useEffect } from \"react\";\nimport * as Realm from \"realm-web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99\n}, {\n  id: \"m2\",\n  name: \"Schnitzel\",\n  description: \"A german specialty!\",\n  price: 16.5\n}, {\n  id: \"m3\",\n  name: \"Barbecue Burger\",\n  description: \"American, raw, meaty\",\n  price: 12.99\n}, {\n  id: \"m4\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99\n}];\nconst AvailableMeals = () => {\n  _s();\n  const [meal, setMeal] = useState([]);\n  async function realmUser() {\n    let app = new Realm.App({\n      id: \"menu-jghnb\"\n    });\n    const credentials = Realm.Credentials.anonymous();\n    try {\n      let user = await app.logIn(credentials);\n      let result = user.callFunction(\"getProduct\").then(response => console.log(response));\n      setMeal(result);\n    } catch (errors) {\n      console.log(errors);\n    }\n  }\n  useEffect(() => {\n    realmUser();\n  }, []);\n  const mealsList = meal.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"lz5N+vBbpqWXZPqUuN0sMdZL6hw=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","classes","Card","MealItem","useState","useEffect","Realm","DUMMY_MEALS","id","name","description","price","AvailableMeals","meal","setMeal","realmUser","app","App","credentials","Credentials","anonymous","user","logIn","result","callFunction","then","response","console","log","errors","mealsList","map","meals"],"sources":["C:/Users/User/Desktop/Menu/src/Components/Meals/AvailableMeals.js"],"sourcesContent":["import React from \"react\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: \"m1\",\r\n    name: \"Sushi\",\r\n    description: \"Finest fish and veggies\",\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    name: \"Schnitzel\",\r\n    description: \"A german specialty!\",\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    name: \"Barbecue Burger\",\r\n    description: \"American, raw, meaty\",\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    name: \"Green Bowl\",\r\n    description: \"Healthy...and green...\",\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = () => {\r\n  const [meal, setMeal] = useState([]);\r\n\r\n  async function realmUser() {\r\n    let app = new Realm.App({ id: \"menu-jghnb\" });\r\n    const credentials = Realm.Credentials.anonymous();\r\n\r\n    try {\r\n      let user = await app.logIn(credentials);\r\n\r\n      let result = user\r\n        .callFunction(\"getProduct\")\r\n        .then((response) => console.log(response));\r\n\r\n      setMeal(result);\r\n    } catch (errors) {\r\n      console.log(errors);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    realmUser();\r\n  }, []);\r\n\r\n  const mealsList = meal.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,KAAK,MAAM,WAAW;AAAC;AAEnC,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,OAAO;EACbC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,qBAAqB;EAClCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,sBAAsB;EACnCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE,wBAAwB;EACrCC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeW,SAAS,GAAG;IACzB,IAAIC,GAAG,GAAG,IAAIV,KAAK,CAACW,GAAG,CAAC;MAAET,EAAE,EAAE;IAAa,CAAC,CAAC;IAC7C,MAAMU,WAAW,GAAGZ,KAAK,CAACa,WAAW,CAACC,SAAS,EAAE;IAEjD,IAAI;MACF,IAAIC,IAAI,GAAG,MAAML,GAAG,CAACM,KAAK,CAACJ,WAAW,CAAC;MAEvC,IAAIK,MAAM,GAAGF,IAAI,CACdG,YAAY,CAAC,YAAY,CAAC,CAC1BC,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC;MAE5CZ,OAAO,CAACS,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOM,MAAM,EAAE;MACfF,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;IACrB;EACF;EAEAxB,SAAS,CAAC,MAAM;IACdU,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,SAAS,GAAGjB,IAAI,CAACkB,GAAG,CAAElB,IAAI,iBAC9B,QAAC,QAAQ;IAEP,EAAE,EAAEA,IAAI,CAACL,EAAG;IACZ,IAAI,EAAEK,IAAI,CAACJ,IAAK;IAChB,WAAW,EAAEI,IAAI,CAACH,WAAY;IAC9B,KAAK,EAAEG,IAAI,CAACF;EAAM,GAJbE,IAAI,CAACL,EAAE;IAAA;IAAA;IAAA;EAAA,QAMf,CAAC;EACF,oBACE;IAAS,SAAS,EAAEP,OAAO,CAAC+B,KAAM;IAAA,uBAChC,QAAC,IAAI;MAAA,uBACH;QAAA,UAAKF;MAAS;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GAxCIlB,cAAc;AAAA,KAAdA,cAAc;AA0CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}